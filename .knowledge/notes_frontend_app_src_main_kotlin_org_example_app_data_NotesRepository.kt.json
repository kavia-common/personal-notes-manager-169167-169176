{"is_source_file": true, "format": "Kotlin", "description": "This file defines the NotesRepository class, which provides high-level data operations for notes and categories in a note-taking app. It manages database interactions, including CRUD operations, and exposes data streams via Kotlin Flows, with change notifications implemented through listeners.", "external_files": ["android.content.ContentValues", "android.content.Context", "kotlinx.coroutines.channels.awaitClose", "kotlinx.coroutines.flow.Flow", "kotlinx.coroutines.flow.callbackFlow", "kotlinx.coroutines.flow.onStart"], "external_methods": ["android.database.sqlite.SQLiteDatabase.rawQuery", "android.database.sqlite.SQLiteDatabase.insert", "android.database.sqlite.SQLiteDatabase.update", "android.database.sqlite.SQLiteDatabase.delete", "android.database.sqlite.SQLiteOpenHelper.getReadableDatabase", "android.database.sqlite.SQLiteOpenHelper.getWritableDatabase"], "published": ["NotesRepository"], "classes": [{"name": "NotesRepository", "description": "A Kotlin class that acts as a data repository for notes and categories, providing methods for CRUD operations, observing data changes via Flows, and managing in-memory notifications."}], "methods": [{"name": "observeNotes", "description": "Returns a Flow that emits the list of notes, updating when changes occur."}, {"name": "observeNotesQuery", "description": "Returns a Flow that emits notes filtered by a query string, updating on data changes."}, {"name": "getNote", "description": "Retrieves a specific note by its ID from the database."}, {"name": "addNote", "description": "Adds a new note to the database and returns its ID."}, {"name": "updateNote", "description": "Updates an existing note in the database."}, {"name": "deleteNote", "description": "Marks a note as deleted in the database."}, {"name": "observeCategories", "description": "Returns a Flow that emits the list of categories, updating on changes."}, {"name": "observeCategoriesWithCounts", "description": "Returns a Flow that emits categories along with count of notes in each category."}, {"name": "addCategory", "description": "Creates a new category in the database."}, {"name": "updateCategory", "description": "Updates an existing category in the database."}, {"name": "deleteCategory", "description": "Deletes a category from the database."}, {"name": "listNotes", "description": "Internal method to retrieve list of notes with optional query filter."}, {"name": "listCategories", "description": "Internal method to retrieve list of categories."}, {"name": "listCategoriesWithCounts", "description": "Internal method to retrieve categories with counts of associated notes."}], "calls": ["helper.readableDatabase.rawQuery", "helper.writableDatabase.insert", "helper.writableDatabase.update", "helper.writableDatabase.delete"], "search-terms": ["NotesRepository", "SQLite operations", "Flow notifications", "database CRUD", "category with counts", "notes query", "kotlin coroutine flow"], "state": 2, "file_id": 10, "knowledge_revision": 116, "git_revision": "", "revision_history": [{"28": ""}, {"91": ""}, {"116": ""}], "hash": "89a2c5f4d5c340fc2c9feeee9d228cda", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/app/src/main/kotlin/org/example/app/data/NotesRepository.kt"}