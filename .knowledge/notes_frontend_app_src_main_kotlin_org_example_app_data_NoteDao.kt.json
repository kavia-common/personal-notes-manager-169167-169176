{"is_source_file": true, "format": "Kotlin", "description": "This file defines the Data Access Object (DAO) interface NoteDao for managing note entities in a Room database, including methods for querying, inserting, updating, deleting, and soft deleting notes.", "external_files": ["androidx.room.*", "kotlinx.coroutines.flow.Flow"], "external_methods": ["Flow", "Note"], "published": ["NoteDao"], "classes": [{"name": "NoteDao", "description": "Interface defining database operations for notes, including reactive queries and CRUD operations."}], "methods": [{"name": "observeAll", "description": "Returns a Flow emitting a list of all non-deleted notes ordered by most recent update."}, {"name": "observeSearch", "description": "Returns a Flow emitting a list of non-deleted notes matching the search query in title or content."}, {"name": "getById", "description": "Suspended function to retrieve a note by its ID."}, {"name": "insert", "description": "Suspended function to insert a new note or replace an existing one on conflict."}, {"name": "update", "description": "Suspended function to update an existing note."}, {"name": "delete", "description": "Suspended function to delete a note."}, {"name": "softDelete", "description": "Suspended function to mark a note as deleted without removing it from the database."}, {"name": "observeByCategory", "description": "Returns a Flow emitting a list of non-deleted notes filtered by category ID, ordered by most recent update."}], "calls": ["Flow", "Note", "insert", "update", "delete", "softDelete", "observeAll", "observeSearch", "getById", "observeByCategory"], "search-terms": ["NoteDao", "Room database", "Data Access Object", "suspend functions", "soft delete", "Flow", "categoryId", "isDeleted"], "state": 2, "file_id": 7, "knowledge_revision": 24, "git_revision": "", "hash": "33e960fec81257548139d1f2209a4cee", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/app/src/main/kotlin/org/example/app/data/NoteDao.kt", "revision_history": [{"24": ""}]}